{"version":3,"sources":["../src/app.js","../src/bibleUtil/detect.js","../src/bibleUtil/reader.js","../src/bibleUtil/render.js","../src/eventWorker.js","../src/userNotes.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["const getInputProcessor = (getUserInput, referenceDetector, getVerse, bibleTextRenderer) => {\n    const getBibleTextForReference = ({raw, resolved}) => \n        getVerse(resolved).then((bibleText) => bibleTextRenderer.renderBibleReferences(raw, bibleText));\n\n    const detectAndResolveBibleReferences = (inputText) => {\n        const removeWhitespace = (reference) => reference.replace(/\\s/g, '');\n        const rawReferences = referenceDetector.detectReference(inputText);\n        const resolveReference = (reference) => referenceDetector.resolveReference(removeWhitespace(reference));\n        return rawReferences.map((reference) => ({ raw: reference, resolved: resolveReference(reference)}));\n    };\n\n    const detectBibleReferencesInUserInput = () => {\n        const bibelReferences = detectAndResolveBibleReferences(getUserInput());\n        return Promise.all(bibelReferences.map(getBibleTextForReference)).then(bibleTextRenderer.displayBibleVerses);\n    };\n    return detectBibleReferencesInUserInput;\n};\n\nexport {\n    getInputProcessor\n};\n","const _booknames = [\n    ['Gen','Genesis','1. Mo','1 Mo','1. Mose', '1 Mose'],\n    ['Ex','Exodus','2. Mo','2 Mo','2. Mose', '2 Mose'],\n    ['Lev','Levitikus','3. Mo','3 Mo','3. Mose', '3 Mose'],\n    ['Num','Numeri','4. Mo','4 Mo','4. Mose', '4 Mose'],\n    ['Dtn','Deuteronomium','5. Mo','5 Mo','5. Mose', '5 Mose'],\n    ['Jos', 'Josua'],\n    ['Ri', 'Richter'],\n    ['Rut', 'Ruth'],\n    ['1 Sam', '1. Samuel', '1. Sam', '1 Samuel'],\n    ['2 Sam', '2. Samuel', '2. Sam', '2 Samuel'],\n    ['1 Kön', '1 Könige', '1. Könige', '1. Kön', '1 Kö', '1. Kö'],\n    ['2 Kön', '2 Könige', '2. Könige', '2. Kön', '2 Kö', '2. Kö'],\n    ['1 Chr', '1. Chronik', '1. Chr', '1 Chronik'],\n    ['2 Chr', '2. Chronik', '2. Chr', '2 Chronik'],\n    ['Esra', 'Esr'],\n    ['Neh', 'Nehemia'],                        ['Tob', 'Tobit'],['Jdt', 'Judit'],\n    ['Est', 'Ester', 'Esther'],         ['1 Makk', '1. Makkabäer'], ['2 Makk', '2. Makkabäer'],\n    ['Ijob','Hiob'],\n    ['Ps','Psalm','Psalmen','Psalter'],\n    ['Spr', 'Sprüche'],\n    ['Koh','Kohelet','Prediger','Pred'],\n    ['Hld', 'Hoheslied'],           ['Weish', 'Weisheit'],['Sir', 'Sirach', 'Jesus Sirach'],\n    ['Jes', 'Jesaja'],\n    ['Jer', 'Jeremia'],\n    ['Klgl', 'Klagelieder', 'Klag'],        ['Bar', 'Baruch'],\n    ['Ez','Ezechiel','Hes','Hesekiel'],\n    ['Dan', 'Daniel'],\n    ['Hos', 'Hosea'],\n    ['Joel'],\n    ['Am', 'Amos'],\n    ['Obd', 'Obadja'],\n    ['Jona'],\n    ['Mi', 'Micha'],\n    ['Nah', 'Nahum'],\n    ['Hab', 'Habakuk'],\n    ['Zef', 'Zefania', 'Zephania', 'Zeph'],\n    ['Hag', 'Haggai'],\n    ['Sach', 'Sacharja'],\n    ['Mal', 'Maleachi'],\n    ['Mt', 'Matthäus', 'Matt'],\n    ['Mk', 'Markus', 'Mark'],\n    ['Lk','Lukas', 'Luk'],\n    ['Joh', 'Johannes'],\n    ['Apg', 'Apostelgeschichte'],\n    ['Röm', 'Römer', 'Rö'],\n    ['1 Kor', '1. Kor', '1. Korinther', '1. Korintherbrief'],\n    ['2 Kor', '2. Kor', '2. Korinther', '2. Korintherbrief'],\n    ['Gal', 'Galater', 'Galaterbrief'],\n    ['Eph', 'Epheser', 'Epheserbrief'],\n    ['Phil', 'Philipper', 'Philipperbrief'],\n    ['Kol','Kolosser', 'Kolosserbrief'],\n    ['1 Thess', '1. Thess', '1. Thessalonicher'],\n    ['2 Thess', '2. Thess', '2. Thessalonicher'],\n    ['1 Tim', '1. Tim', '1. Timotheus'],\n    ['2 Tim', '2. Tim', '2. Timotheus'],\n    ['Tit', 'Titus'],\n    ['Phlm', 'Philemon'],\n    ['Hebr', 'Hebräer', 'Hebräerbrief'],\n    ['Jak', 'Jakobus'],\n    ['1 Petr', '1. Petrus'],\n    ['2 Petr', '2. Petrus'],\n    ['1 Joh', '1. Joh', '1. Johannes', '1. Brief des Johannes', '1. Johannesbrief'],\n    ['2 Joh', '2. Joh', '2. Johannes', '2. Brief des Johannes', '2. Johannesbrief'],\n    ['3 Joh', '3. Joh', '3. Johannes', '3. Brief des Johannes', '3. Johannesbrief'],\n    ['Jud', 'Judas'],\n    ['Offb', 'Offenbarung'],\n];\n\n// reverse index to lookup canonical bookname (always the first in array)\nconst _indexedBooknames = {};\n_booknames.forEach((book) => {\n    book.forEach((bookname) => {\n        _indexedBooknames[bookname] = book[0];\n        _indexedBooknames[bookname.replace(' ', '')] = book[0];\n    });\n});\n\nconst flattenArray = (arrays) => [].concat.apply([], arrays);\n\nconst regexFactory = (function () {\n    const optionalFollowing = 'f?f?';\n    // Negative-Look-Ahead-Group to avoid matching sth like Ps 2345 (without it would match 234 as a chapter)\n    const numberOfMaximumThreeDigits = `\\\\d{1,3}(?!\\\\d)`;\n    // Negative-Look-Behind to avoid matching booknames preceded by letters\n    // TODO Not supported by javascript\n    // const noPrecedingLetters = `(?<![a-zA-Z])`;\n\n    const createLinkRegexpString = (bookRegExpString, allowWhitespace, groupChaptersAndVerses) => {\n        const optionalSpaces = allowWhitespace ? '\\\\s*' : '';\n        // TODO additional consistence check: maximum chapter number is (Psalm) 150.\n        const chapter = groupChaptersAndVerses ? `(${numberOfMaximumThreeDigits})` : numberOfMaximumThreeDigits;\n        // TODO additional consistence check: maximum verse number is (Psalm 119),176.\n        const verse = groupChaptersAndVerses ? `(${numberOfMaximumThreeDigits})` : numberOfMaximumThreeDigits;\n\n        const optionalRange = `(${optionalSpaces}-(${optionalSpaces}${chapter},)?${optionalSpaces}${verse})?`;\n        const verseOrRange = `${verse}${optionalRange}${optionalFollowing}`;\n        \n        // optional: verses seperated by '.' like in Gen 1,2.4.6-8.10\n        // detect unlimited number of verses\n        const anyNumberOfVerses = `${verseOrRange}(\\\\.${verseOrRange})*`;\n        // resolve up to three verses (explicit groups needed, so we cannot use *); \n        // extend this pattern to the needed number of resolved verses\n        const upToThreeVerses = `${verseOrRange}(\\\\.${verseOrRange}(\\\\.${verseOrRange})?)?`;\n        const oneOrMoreVerses = groupChaptersAndVerses ? upToThreeVerses : anyNumberOfVerses;\n        return `${bookRegExpString}\\\\.?${optionalSpaces}${chapter}${optionalRange}(,${optionalSpaces}${oneOrMoreVerses})?`;\n    }\n\n\n    return {\n        createLinkDetectorRegexp: () => {\n            const escapeForRegExp = (str) => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n            const makeSpaceOptional = (str) => str.replace(' ', '\\\\s?');\n            const bookRegExpString = `(${flattenArray(_booknames).map(escapeForRegExp).map(makeSpaceOptional).join('|')})`;\n            const regexString = createLinkRegexpString(bookRegExpString, true, false);\n            const re = new RegExp(regexString, 'g');\n            return re;\n        },\n        createLinkResolverRegexp: () => {\n            const escapeForRegExp = (str) => str.replace(' ', '').replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n            const bookRegExpString = `(${flattenArray(_booknames).map(escapeForRegExp).join('|')})`;\n            const regexString = createLinkRegexpString(bookRegExpString, false, true);\n            const re = new RegExp(regexString);\n            return re;\n        }\n    }\n})();\n\n\nconst linkDetectorRegexp = regexFactory.createLinkDetectorRegexp();\nconst linkResolverRegexp = regexFactory.createLinkResolverRegexp();\n\nconst detectReference = (text) => text.match(linkDetectorRegexp) || [];\n\nconst resolveReference = (rawReference) => {\n    const matches = linkResolverRegexp.exec(rawReference);\n    const book = _indexedBooknames[matches[1]];\n    const chapter = parseInt(matches[2]);\n    const verseFrom = parseInt(matches[8]);\n    const chapterTo = parseInt(matches[11]) || chapter;\n    const verseTo = parseInt(matches[12]);\n\n    const from = {chapter, verse: verseFrom};\n    const to = matches[12] && {chapter: chapterTo, verse: verseTo};\n\n    const references = [{from, to}];\n    if (matches[14]) {\n        const from = {chapter, verse: parseInt(matches[14])};\n        const to = matches[18] && {chapter, verse: parseInt(matches[18])};\n        references.push({from, to});\n    }\n    if (matches[20]) {\n        const from = {chapter, verse: parseInt(matches[20])};\n        const to = matches[24] && {chapter, verse: parseInt(matches[24])};\n        references.push({from, to});\n    }\n    return {book, references};\n};\n\nexport {\n    detectReference,\n    resolveReference,\n    _booknames\n};\n","const loadJSON = (file) => new Promise(function(resolve, reject) {\n    let req = new XMLHttpRequest();\n    req.open('GET', file, true);\n    req.onload = () => {\n        if (req.status == '200') {\n            resolve(JSON.parse(req.responseText));\n        } else {\n            reject(Error(req.statusText))\n        }\n    };\n    req.send();\n});\n\nconst mapBook = (bookName) => {\n    const bookMapping = {\n        'Gen': '1Mo',\n        'Jos': 'Jos',\n        'Röm': 'Röm',\n        'Offb': 'Offb',\n        'Ex':'2Mo',\n        'Lev':'3Mo',\n        'Num':'4Mo',\n        'Dtn':'5Mo',\n        'Ri':'Ri',\n        'Rut':'Rt',\n        '1 Sam':'1Sam',\n        '2 Sam':'2Sam',\n        '1 Kön':'1Kö',\n        '2 Kön':'2Kö',\n        '1 Chr':'1Chr',\n        '2 Chr':'2Chr',\n        'Esra':'Esr', \n        'Neh':'Neh',\n        'Tob':'Tob',\n        'Jdt':'Jdt',\n        'Est':'Est',\n        '1 Makk':'1Makk',\n        '2 Makk':'2Makk',\n        'Ijob':'Hi',\n        'Ps':'Ps',\n        'Spr':'Spr',\n        'Koh':'Pred',\n        'Hld':'Hl',\n        'Weish':'Weish',\n        'Sir':'Sir',\n        'Jes':'Jes',\n        'Jer':'Jer',\n        'Klgl':'Kla',\n        'Bar':'Bar',\n        'Ez':'Hes',\n        'Dan':'Dan',\n        'Hos':'Hos',\n        'Joel':'Joe',\n        'Am':'Am',\n        'Obd':'Ob',\n        'Jona':'Jon',\n        'Mi':'Mi',\n        'Nah':'Nah',\n        'Hab':'Hab',\n        'Zef':'Zeph',\n        'Hag':'Hag',\n        'Sach':'Sach',\n        'Mal':'Mal',\n        'Mt':'Mt',\n        'Mk':'Mk',\n        'Lk':'Lk',\n        'Joh':'Joh',\n        'Apg':'Apg',\n        '1 Kor':'1Kor',\n        '2 Kor':'2Kor',\n        'Gal':'Gal',\n        'Eph':'Eph',\n        'Phil':'Phil',\n        'Kol':'Kol',\n        '1 Thess':'1Thes',\n        '2 Thess':'2Thes',\n        '1 Tim':'1Tim',\n        '2 Tim':'2Tim',\n        'Tit':'Tit',\n        'Phlm':'Phim',\n        'Hebr':'Hebr',\n        'Jak':'Jak',\n        '1 Petr':'1Petr',\n        '2 Petr':'2Petr',\n        '1 Joh':'1Joh',\n        '2 Joh':'2Joh',\n        '3 Joh':'3Joh',\n        'Jud':'Jud'\n    };\n    return bookMapping[bookName];\n}\n\nconst getPath = (reference) => {\n    return [mapBook(reference.book), reference.references[0].from.chapter];\n}\n\nconst getChapter = (path) => {\n    return loadJSON(`bible/${path.join('/')}.json`);\n};\n\nconst getVerseFromChapter = (versesRef, chapterJson) => {\n    if (versesRef.to) {\n        return chapterJson.verses.slice(versesRef.from.verse - 1, versesRef.to.verse);\n    } else {\n        return chapterJson.verses.slice(versesRef.from.verse - 1, versesRef.from.verse);\n    }\n};\n\nconst getVersesFromChapter = (verseRefs, chapterJson) => {\n    return verseRefs.map((verseRef) => getVerseFromChapter(verseRef, chapterJson));\n};\n\nconst getVerse = (reference) => {\n    const path = getPath(reference);\n    return getChapter(path).then((chapterJson) => getVersesFromChapter(reference.references, chapterJson)).catch((err) => console.log(err));\n};\n\nexport {\n    getVerse\n};\n","const BibleTextRenderer = function (outputElement) {\n    const renderBibleReferences = (rawReference, nestedVerses) => {\n        const uriEscapeReference = (reference) => encodeURIComponent(reference.replace(/\\s/g, ''));\n        const generateBibleServerLink = (reference) => `https://bibleserver.com/text/LUT/${uriEscapeReference(reference)}`;\n        // TODO html escaping\n        const referenceTemplate = (reference, bibleText) => `<p>${reference}:\n            <small><a href=\"${generateBibleServerLink(reference)}\" target=\"_blank\">\n                Öffne auf bibleserver.com\n            </a></small></p><p>${bibleText}</p>`;\n        const verseRangeToString = (verseRange) => verseRange.map((verse) => `<small>${verse.verse}</small> ${verse.text}`).join(' ');\n\n        const flattenedVerses = [].concat(...nestedVerses);\n        return referenceTemplate(rawReference, verseRangeToString(flattenedVerses));\n    };\n    const displayBibleVerses = (flattenedVerses) => outputElement.innerHTML = flattenedVerses.join('');\n    \n    return {renderBibleReferences, displayBibleVerses};\n};\n\nexport {\n    BibleTextRenderer\n};\n","const EventWorker = function (_window) {\n    let pending = false;\n    let next = null;\n    let timer = 0;\n\n    const reset = () => {\n        if (timer > 0) {\n            _window.console.log(`worker took ${Date.now() - timer}ms`);\n        }\n        next = null;\n        pending = false;\n    }\n\n    const doNext = () => {\n        if (next && !pending) {\n            pending = true;\n            timer = Date.now();\n            next().then(() => {\n                reset();\n            }).catch((err) => {\n                reset();\n                _window.console.error('catched error', err);\n            });\n        }\n    }\n\n    _window.setInterval(doNext, 1000);\n    \n    return {\n        add: (work) => next = work\n    }\n};\n\nexport {\n    EventWorker\n};\n","const UserNotes = function (storage, inputElement) {\n    const STORAGE_KEY = 'userNotes';\n    const _getUserInput = () => inputElement.innerText;\n    return {\n        get: _getUserInput,\n        save: () => storage.setItem(STORAGE_KEY, _getUserInput()),\n        restore: () => {\n            const storageContent = storage.getItem(STORAGE_KEY);\n            if (storageContent && storageContent.trim()) {\n                inputElement.innerText = storageContent;\n            }\n        }\n    }\n};\n\nexport {\n    UserNotes\n};\n"]}